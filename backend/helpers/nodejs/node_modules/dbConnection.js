var mysql = require("mysql");

async function connectDB(DBhost, DBuser, DBpassword, DBname) {
  console.log("--- Initializing DB Tables ---");

  console.log("Connecting to database...");
  var con = mysql.createConnection({
    host: DBhost,
    user: DBuser,
    password: DBpassword,
    database: DBname,
  });

  const connectionStatus = await new Promise((resolve, reject) => {
    con.connect(function (err) {
      if (err) {
        console.log("Failed to connect to the database");
        reject("Failed to connect to the database");
        //TO-DO: Need to figure out how to throw an error to primer function so that it rollsback the deployment
      }
      resolve("Connected to Database!");
    });
  });

  console.log("Successfully connected to database!");

  const useDatabase = await new Promise((resolve, reject) => {
    con.query("USE databaseAmazonianPrime", function (err, res) {
      if (err) {
        reject("Couldn't switch to database!");
      }
      resolve(res);
    });
  });

  return con;
}

async function disconnectDB(connection) {
  const connectionStatus = await new Promise((resolve, reject) => {
    connection.end(function (err) {
      if (err) {
        console.log("Failed to disconnect from the database");
        reject("Failed to disconnect from the database");
      }
      resolve("Disconnected from Database!");
    });
  });
}

module.exports = { connectDB, disconnectDB };
