class EmptyShoppingCartError extends Error {
    constructor(message) {
        super(message);
        this.name = this.constructor.name;
    }
}

class PurchaseQuantityExceededError extends Error {
    constructor(message) {
        super(message);
        this.name = this.constructor.name;
    }
}

class PaymentFailureError extends Error {
    constructor(message) {
        super(message);
        this.name = this.constructor.name;
    }
}

class MissingParameterError extends Error {
    constructor(message) {
        super(message);
        this.name = this.constructor.name;
    }
}

class ErrorWrapper extends Error {
    constructor(message){
        super(message);
        this.name = this.constructor.name;
    }
}

function jsonFriendlyErrorReplacer(key, value) {
    if (value instanceof Error) {
      return {
        // Pull all enumerable properties, supporting properties on custom Errors
        ...value,
        // Explicitly pull Error's non-enumerable properties
        name: value.name,
        message: value.message,
        stack: value.stack,
      }
    }
  
    return value
}

module.exports = {
    EmptyShoppingCartError,
    PurchaseQuantityExceededError,
    PaymentFailureError,
    MissingParameterError,
    ErrorWrapper,
    jsonFriendlyErrorReplacer
  };